{"version":3,"file":"blocks.js","mappings":"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AACC,QAAQ,CAAC3C,KAAK,CAACK,SAAS,CAAE;UAC7GM,OAAO,EAAEA,CAAA,KAAM;YACd;YACA,IAAIN,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAG,EAAE;;YAE5E;YACA6B,WAAW,CAACrC,OAAO,CAAEgD,GAAG,IAAK;cAC5BxC,SAAS,GAAGA,SAAS,CAACyC,OAAO,CAACD,GAAG,EAAE,EAAE,CAAC;YACvC,CAAC,CAAC;;YAEF;YACAxC,SAAS,GAAGA,SAAS,CAAC0C,IAAI,CAAC,CAAC;;YAE5B;YACA1C,SAAS,GAAI,GAAEA,SAAU,IAAGL,KAAK,CAACK,SAAU,EAAC,CAAC0C,IAAI,CAAC,CAAC;;YAEpD;YACAvC,KAAK,CAACmB,aAAa,CAAC;cAAEtB,SAAS,EAAEA;YAAU,CAAC,CAAC;UAC9C,CAAE;UACFA,SAAS,EAAE,QAAQ,GAAGL,KAAK,CAACZ;QAAK,GAEhCY,KAAK,CAACL,KACA,CACR,CACG,CACO,CACT,CACK,CACO,CAEX,CAAC;MAEb,CAAC;IACF,CAAC,EAAE,mBAAoB,CAAC;IAExBhB,2DAAS,CAAE,kBAAkB,EAAE,kCAAkC,EAAEqE,iBAAkB,CAAC;EAEvF,CAAC;;EAED;EACA;EACA;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAaC;EACA;EACA;;EAGA,IAAIE,0BAA0B,GAAG,SAAAA,CAAA,EAAW;IAC3C;IACAvF,oEAAiB,CAAC,0BAA0B,EAAE;MAC7CyC,KAAK,EAAE,sBAAsB;MAC7B+C,WAAW,EAAE,yHAAyH;MACtI1C,IAAI,EAAEhC,wDAAU;MAAE;MAClByC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE;QACXd,SAAS,EAAE;UACVS,IAAI,EAAE,QAAQ;UACdsC,OAAO,EAAE;QACV;MACD,CAAC;MACD/D,QAAQ,EAAE;QACTgE,WAAW,EAAE;MACd,CAAC;MACDrC,IAAI,EAAGR,KAAK,IAAK;QAChB,MAAM;UAAEH;QAAU,CAAC,GAAGG,KAAK,CAACW,UAAU;QAEtC,OACC5D,iEAAA;UAAK8C,SAAS,EAAG,wBAAuBA,SAAU;QAAE,GACnD9C,iEAAA,CAACc,gEAAW;UACXiF,QAAQ,EAAE,CAAC,CAAC,wBAAwB,CAAC,CAAE;UACvCC,YAAY,EAAE;QAAM,CACpB,CACG,CAAC;MAER,CAAC;MACD1B,IAAI,EAAGrB,KAAK,IAAK;QAChB,MAAM;UAAEH;QAAU,CAAC,GAAGG,KAAK,CAACW,UAAU;QAEtC,OACC5D,iEAAA;UAAK8C,SAAS,EAAG,wBAAuBA,SAAU;QAAE,GACnD9C,iEAAA,CAACc,gEAAW,CAACyD,OAAO,MAAE,CAClB,CAAC;MAER;IACD,CAAC,CAAC;;IAEF;IACAnE,oEAAiB,CAAC,wBAAwB,EAAE;MAC3CyC,KAAK,EAAE,oBAAoB;MAC3B+C,WAAW,EAAE,qHAAqH;MAClI1C,IAAI,EAAE,iBAAiB;MACvBS,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE;QACXd,SAAS,EAAE;UACVS,IAAI,EAAE,QAAQ;UACdsC,OAAO,EAAE;QACV;MACD,CAAC;MACD/D,QAAQ,EAAE;QACTgE,WAAW,EAAE;MACd,CAAC;MACDrC,IAAI,EAAGR,KAAK,IAAK;QAChB,MAAM;UAAEH;QAAU,CAAC,GAAGG,KAAK,CAACW,UAAU;QAEtC,OACC5D,iEAAA;UAAK8C,SAAS,EAAG,sBAAqBA,SAAU;QAAE,GACjD9C,iEAAA,CAACc,gEAAW;UACXiF,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE;YAAE1B,WAAW,EAAE;UAAsB,CAAC,CAAC,CAAE;UACvE2B,YAAY,EAAE;QAAM,CACpB,CACG,CAAC;MAER,CAAC;MACD1B,IAAI,EAAGrB,KAAK,IAAK;QAChB,MAAM;UAAEH;QAAU,CAAC,GAAGG,KAAK,CAACW,UAAU;QAEtC,OACC5D,iEAAA;UAAK8C,SAAS,EAAG,sBAAqBA,SAAU;QAAE,GACjD9C,iEAAA,CAACc,gEAAW,CAACyD,OAAO,MAAE,CAClB,CAAC;MAER;IACD,CAAC,CAAC;EAEH,CAAC;EAKD,IAAI0B,gCAAgC,GAAG,SAAAA,CAAA,EAAW;IAEjD;IACA,MAAMC,kBAAkB,GAAG1F,8EAA0B,CAAIkE,SAAS,IAAM;MACvE,MAAMlC,MAAM,GAAG,CACd;QACCX,IAAI,EAAE,YAAY;QAClBiB,SAAS,EAAE,0BAA0B;QACrCV,KAAK,EAAE;MACR,CAAC,EACD;QACCP,IAAI,EAAE,kBAAkB;QACxBiB,SAAS,EAAE,gCAAgC;QAC3CV,KAAK,EAAE;MACR,CAAC,EACD;QACCP,IAAI,EAAE,qBAAqB;QAC3BiB,SAAS,EAAE,mCAAmC;QAC9CV,KAAK,EAAE;MACR,CAAC,EACD;QACCP,IAAI,EAAE,kBAAkB;QACxBiB,SAAS,EAAE,gCAAgC;QAC3CV,KAAK,EAAE;MACR,CAAC,EACD;QACCP,IAAI,EAAE,qBAAqB;QAC3BiB,SAAS,EAAE,mCAAmC;QAC9CV,KAAK,EAAE;MACR,CAAC,EACD;QACCP,IAAI,EAAE,eAAe;QACrBiB,SAAS,EAAE,6BAA6B;QACxCV,KAAK,EAAE;MACR,CAAC,CACD;;MAED;MACA,IAAIuC,WAAW,GAAGnC,MAAM,CAACoC,GAAG,CAAEnC,KAAK,IAAIA,KAAK,CAACK,SAAU,CAAC,CAAC+B,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAK,EAAE,CAAC;MAElF,OAAQ7B,KAAK,IAAK;QACjB,MAAM;UAAEpB,IAAI;UAAE+B,UAAU;UAAEQ,aAAa;UAAEW;QAAW,CAAC,GAAG9B,KAAK;QAC7D,MAAM;UAAE+B;QAAY,CAAC,GAAGpB,UAAU;;QAElC;QACA,IAAI/B,IAAI,KAAK,wBAAwB,EAAE;UACtC,OACC7B,iEAAA,CAAC0E,SAAS;YAAA,GAAKzB;UAAK,CAAG,CAAC;QAE1B;QAEA,OACCjD,iEAAA,CAACS,wDAAQ,QACRT,iEAAA,CAAC0E,SAAS;UAAA,GAAKzB;QAAK,CAAG,CAAC,EACvB8B,UAAU,IACV/E,iEAAA,CAACU,sEAAiB,QACjBV,iEAAA,CAACW,4DAAS;UAACkC,KAAK,EAAC,eAAe;UAACoC,WAAW,EAAE;QAAK,GAClDjF,iEAAA;UAAK8C,SAAS,EAAC;QAAoD,GAClE9C,iEAAA,CAACY,8DAAW,QACXZ,iEAAA;UAAK8C,SAAS,EAAC;QAAgC,GAC7CN,MAAM,CAACoC,GAAG,CAAEnC,KAAK,IACjBzC,iEAAA,CAACa,yDAAM;UACNgC,KAAK,EAAEJ,KAAK,CAACiD,QAAS;UACtBR,SAAS,EAAEjC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAIG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC,CAACC,QAAQ,CAAC3C,KAAK,CAACK,SAAS,CAAE;UACzGuC,WAAW,EAAE,CAACpC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAI,CAACG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC,CAACC,QAAQ,CAAC3C,KAAK,CAACK,SAAS,CAAE;UAC7GM,OAAO,EAAEA,CAAA,KAAM;YACd;YACA,IAAIN,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAG,EAAE;;YAE5E;YACA6B,WAAW,CAACrC,OAAO,CAAEgD,GAAG,IAAK;cAC5BxC,SAAS,GAAGA,SAAS,CAACyC,OAAO,CAACD,GAAG,EAAE,EAAE,CAAC;YACvC,CAAC,CAAC;;YAEF;YACAxC,SAAS,GAAGA,SAAS,CAAC0C,IAAI,CAAC,CAAC;;YAE5B;YACA1C,SAAS,GAAI,GAAEA,SAAU,IAAGL,KAAK,CAACK,SAAU,EAAC,CAAC0C,IAAI,CAAC,CAAC;;YAEpD;YACAvC,KAAK,CAACmB,aAAa,CAAC;cAAEtB,SAAS,EAAEA;YAAU,CAAC,CAAC;UAC9C,CAAE;UACFA,SAAS,EAAE,QAAQ,GAAGL,KAAK,CAACZ;QAAK,GAEhCY,KAAK,CAACL,KACA,CACR,CACG,CACO,CACT,CAAC,EACNpC,iEAAA,CAACuB,8DAAW;UAAC4E,IAAI,EAAC;QAAmD,CAExD,CACH,CACO,CAEX,CAAC;MAEb,CAAC;IACF,CAAC,EAAE,oBAAqB,CAAC;IAEzB/E,2DAAS,CAAE,kBAAkB,EAAE,mCAAmC,EAAE8E,kBAAmB,CAAC;EACzF,CAAC;EAKD,IAAIE,+BAA+B,GAAG,SAAAA,CAAA,EAAW;IAEhD;IACA,MAAMC,oBAAoB,GAAG7F,8EAA0B,CAAIkE,SAAS,IAAM;MACzE,MAAM4B,WAAW,GAAG,kBAAkB;MAEtC,MAAM9D,MAAM,GAAG,CACd;QACCX,IAAI,EAAE,MAAM;QACZO,KAAK,EAAE,YAAY;QACnBU,SAAS,EAAE;MACZ,CAAC,EACD;QACCjB,IAAI,EAAE,MAAM;QACZO,KAAK,EAAE,aAAa;QACpBU,SAAS,EAAE;MACZ,CAAC,EACD;QACCjB,IAAI,EAAE,OAAO;QACbO,KAAK,EAAE,cAAc;QACrBU,SAAS,EAAE;MACZ,CAAC,EACD;QACCjB,IAAI,EAAE,QAAQ;QACdO,KAAK,EAAE,eAAe;QACtBU,SAAS,EAAE;MACZ,CAAC,EACD;QACCjB,IAAI,EAAE,OAAO;QACbO,KAAK,EAAE,cAAc;QACrBU,SAAS,EAAE;MACZ,CAAC,EACD;QACCjB,IAAI,EAAE,MAAM;QACZO,KAAK,EAAE,cAAc;QACrBU,SAAS,EAAE;MACZ,CAAC,CACD;;MAED;MACA,IAAI6B,WAAW,GAAGnC,MAAM,CAACoC,GAAG,CAAEnC,KAAK,IAAIA,KAAK,CAACK,SAAU,CAAC,CAAC+B,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAK,EAAE,CAAC;MAElF,OAAQ7B,KAAK,IAAK;QACjB,MAAM;UAAEpB,IAAI;UAAE+B,UAAU;UAAEQ,aAAa;UAAEW;QAAW,CAAC,GAAG9B,KAAK;QAC7D,MAAM;UAAE+B;QAAY,CAAC,GAAGpB,UAAU;QAElC,OACC5D,iEAAA,CAACS,wDAAQ,QACRT,iEAAA,CAAC0E,SAAS;UAAA,GAAKzB;QAAK,CAAG,CAAC,EACvB8B,UAAU,IACV/E,iEAAA,CAACU,sEAAiB,QACjBV,iEAAA,CAACW,4DAAS;UAACkC,KAAK,EAAC,iBAAiB;UAACoC,WAAW,EAAE;QAAK,GACpDjF,iEAAA;UAAK8C,SAAS,EAAC;QAAsD,GACpE9C,iEAAA,CAACY,8DAAW,QACXZ,iEAAA;UAAK8C,SAAS,EAAC;QAAgC,GAE9C9C,iEAAA,CAACa,yDAAM;UACNgC,KAAK,EAAC,MAAM;UACZqC,SAAS,EAAE,CAACjC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAI,CAACG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACsC,QAAQ,CAAC,kBAAkB,CAAE;UACnGC,WAAW,EAAEpC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAIG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACsC,QAAQ,CAAC,kBAAkB,CAAE;UACnGhC,OAAO,EAAEA,CAAA,KAAM;YACd;YACA,IAAIN,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAG,EAAE;;YAE5E;YACA6B,WAAW,CAACrC,OAAO,CAAEgD,GAAG,IAAK;cAC5BxC,SAAS,GAAGA,SAAS,CAACyC,OAAO,CAACD,GAAG,EAAE,EAAE,CAAC;YACvC,CAAC,CAAC;;YAEF;YACAxC,SAAS,GAAGA,SAAS,CAAC0C,IAAI,CAAC,CAAC;;YAE5B;YACAvC,KAAK,CAACmB,aAAa,CAAC;cAAEtB,SAAS,EAAEA;YAAU,CAAC,CAAC;UAC9C,CAAE;UACFA,SAAS,EAAE;QAAgB,GAC3B,SAEO,CAAC,EAERN,MAAM,CAACoC,GAAG,CAAEnC,KAAK,IACjBzC,iEAAA,CAACa,yDAAM;UACNgC,KAAK,EAAEJ,KAAK,CAACiD,QAAS;UACtBR,SAAS,EAAEjC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAIG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC,CAACC,QAAQ,CAAC3C,KAAK,CAACK,SAAS,CAAE;UACzGuC,WAAW,EAAE,CAACpC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAI,CAACG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC,CAACC,QAAQ,CAAC3C,KAAK,CAACK,SAAS,CAAE;UAC7GM,OAAO,EAAEA,CAAA,KAAM;YACd;YACA,IAAIN,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAG,EAAE;;YAE5E;YACA6B,WAAW,CAACrC,OAAO,CAAEgD,GAAG,IAAK;cAC5BxC,SAAS,GAAGA,SAAS,CAACyC,OAAO,CAACD,GAAG,EAAE,EAAE,CAAC;YACvC,CAAC,CAAC;;YAEF;YACAxC,SAAS,GAAGA,SAAS,CAAC0C,IAAI,CAAC,CAAC;;YAE5B;YACA1C,SAAS,GAAI,GAAEA,SAAU,IAAGL,KAAK,CAACK,SAAU,EAAC,CAAC0C,IAAI,CAAC,CAAC;;YAEpD;YACAvC,KAAK,CAACmB,aAAa,CAAC;cAAEtB,SAAS,EAAEA;YAAU,CAAC,CAAC;UAC9C,CAAE;UACFA,SAAS,EAAE,QAAQ,GAAGL,KAAK,CAACZ;QAAK,GAEhCY,KAAK,CAACL,KACA,CACR,CACG,CACO,CACT,CACK,CACO,CAEX,CAAC;MAEb,CAAC;IACF,CAAC,EAAE,sBAAuB,CAAC;IAE3BhB,2DAAS,CAAE,kBAAkB,EAAE,qCAAqC,EAAEiF,oBAAqB,CAAC;EAC7F,CAAC;EAGD,IAAIE,yBAAymBE;IACA,MAAMC,oBAAoB,GAAGhG,8EAA0B,CAAIkE,SAAS,IAAM;MACzE,MAAMlC,MAAM,GAAG,CACd;QACCX,IAAI,EAAE,SAAS;QACfiB,SAAS,EAAE,yBAAyB;QACpCV,KAAK,EAAE;MACR,CAAC,EACD;QACCP,IAAI,EAAE,MAAM;QACZiB,SAAS,EAAE,sBAAsB;QACjCV,KAAK,EAAE;MACR,CAAC,EACD;QACCP,IAAI,EAAE,YAAY;QAClBiB,SAAS,EAAE,4BAA4B;QACvCV,KAAK,EAAE;MACR,CAAC,CACD;;MAED;MACA,IAAIuC,WAAW,GAAGnC,MAAM,CAACoC,GAAG,CAAEnC,KAAK,IAAIA,KAAK,CAACK,SAAU,CAAC,CAAC+B,MAAM,CAACC,GAAG,IAAIA,GAAG,KAAK,EAAE,CAAC;MAElF,OAAQ7B,KAAK,IAAK;QACjB,MAAM;UAAEpB,IAAI;UAAE+B,UAAU;UAAEQ,aAAa;UAAEW;QAAW,CAAC,GAAG9B,KAAK;QAC7D,MAAM;UAAE+B;QAAY,CAAC,GAAGpB,UAAU;;QAElC;QACA,IAAK,CAAEhC,2BAA2B,CAAEC,IAAK,CAAC,EAAG;UAC5C,OACC7B,iEAAA,CAAC0E,SAAS;YAAA,GAAKzB;UAAK,CAAG,CAAC;QAE1B;QAEA,OACCjD,iEAAA,CAACS,wDAAQ,QACRT,iEAAA,CAAC0E,SAAS;UAAA,GAAKzB;QAAK,CAAG,CAAC,EACvB8B,UAAU,IACV/E,iEAAA,CAACU,sEAAiB,QACjBV,iEAAA,CAACW,4DAAS;UAACkC,KAAK,EAAC,iBAAiB;UAACoC,WAAW,EAAE;QAAK,GACpDjF,iEAAA;UAAK8C,SAAS,EAAC;QAAsD,GACpE9C,iEAAA,CAACY,8DAAW,QACXZ,iEAAA;UAAK8C,SAAS,EAAC;QAAgC,GAE9C9C,iEAAA,CAACa,yDAAM;UACNgC,KAAK,EAAC,MAAM;UACZqC,SAAS,EAAE,CAACjC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAI,CAACG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACsC,QAAQ,CAAC,kBAAkB,CAAE;UACnGC,WAAW,EAAEpC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAIG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACsC,QAAQ,CAAC,kBAAkB,CAAE;UACnGhC,OAAO,EAAEA,CAAA,KAAM;YACd;YACA,IAAIN,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAG,EAAE;;YAE5E;YACA6B,WAAW,CAACrC,OAAO,CAAEgD,GAAG,IAAK;cAC5BxC,SAAS,GAAGA,SAAS,CAACyC,OAAO,CAACD,GAAG,EAAE,EAAE,CAAC;YACvC,CAAC,CAAC;;YAEF;YACAxC,SAAS,GAAGA,SAAS,CAAC0C,IAAI,CAAC,CAAC;;YAE5B;YACAvC,KAAK,CAACmB,aAAa,CAAC;cAAEtB,SAAS,EAAEA;YAAU,CAAC,CAAC;UAC9C,CAAE;UACFA,SAAS,EAAE;QAAa,GACxB,MAEO,CAAC,EAERN,MAAM,CAACoC,GAAG,CAAEnC,KAAK,IACjBzC,iEAAA,CAACa,yDAAM;UACNgC,KAAK,EAAEJ,KAAK,CAACiD,QAAS;UACtBR,SAAS,EAAEjC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAIG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC,CAACC,QAAQ,CAAC3C,KAAK,CAACK,SAAS,CAAE;UACzGuC,WAAW,EAAE,CAACpC,KAAK,CAACW,UAAU,CAACd,SAAS,IAAI,CAACG,KAAK,CAACW,UAAU,CAACd,SAAS,CAACqC,KAAK,CAAC,GAAG,CAAC,CAACC,QAAQ,CAAC3C,KAAK,CAACK,SAAS,CAAE;UAC7GM,OAAO,EAAEA,CAAA,KAAM;YACd;YACA,IAAIN,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAGG,KAAK,CAACW,UAAU,CAACd,SAAS,GAAG,EAAE;;YAE5E;YACA6B,WAAW,CAACrC,OAAO,CAAEgD,GAAG,IAAK;cAC5BxC,SAAS,GAAGA,SAAS,CAACyC,OAAO,CAACD,GAAG,EAAE,EAAE,CAAC;YACvC,CAAC,CAAC;;YAEF;YACAxC,SAAS,GAAGA,SAAS,CAAC0C,IAAI,CAAC,CAAC;;YAE5B;YACA1C,SAAS,GAAI,GAAEA,SAAU,IAAGL,KAAK,CAACK,SAAU,EAAC,CAAC0C,IAAI,CAAC,CAAC;;YAEpD;YACAvC,KAAK,CAACmB,aAAa,CAAC;cAAEtB,SAAS,EAAEA;YAAU,CAAC,CAAC;UAC9C,CAAE;UACFA,SAAS,EAAE,QAAQ,GAAGL,KAAK,CAACZ;QAAK,GAEhCY,KAAK,CAACL,KACA,CACR,CACG,CACO,CACT,CACK,CACO,CAEX,CAAC;MAEb,CAAC;IACF,CAAC,EAAE,sBAAuB,CAAC;IAE3BhB,2DAAS,CAAE,kBAAkB,EAAE,qCAAqC,EAAEoF,oBAAqB,CAAC;EAC7F,CAAC;;EAED;EACA;EACA;;EAEA;EACAxE,mBAAmB,CAAC,CAAC;EAErBC,kBAAkB,CAAC,CAAC;EAEpBC,oBAAoB,CAAC,CAAC;;EAEtB;EACAQ,qBAAqB,CAAC,CAAC;;EAEvB;EACAgB,uBAAuB,CAAC,CAAC;;EAEzB;EACAc,4BAA4B,CAAC,CAAC;;EAE9B;EACA;;EAEA;EACAmB,0BAA0B,CAAC,CAAC;EAE5BM,gCAAgC,CAAC,CAAC;;EAElC;EACAG,+BAA+B,CAAC,CAAC;;EAEjC;EACAG,yBAAyB,CAAC,CAAC;AAE5B,CAAC,CAAC,C","sources":["webpack://great-city-medical/./node_modules/@wordpress/icons/build-module/library/fullscreen.js","webpack://great-city-medical/external window [\"wp\",\"blockEditor\"]","webpack://great-city-medical/external window [\"wp\",\"blocks\"]","webpack://great-city-medical/external window [\"wp\",\"components\"]","webpack://great-city-medical/external window [\"wp\",\"compose\"]","webpack://great-city-medical/external window [\"wp\",\"domReady\"]","webpack://great-city-medical/external window [\"wp\",\"element\"]","webpack://great-city-medical/external window [\"wp\",\"hooks\"]","webpack://great-city-medical/external window [\"wp\",\"primitives\"]","webpack://great-city-medical/external window [\"wp\",\"richText\"]","webpack://great-city-medical/webpack/bootstrap","webpack://great-city-medical/webpack/runtime/compat get default export","webpack://great-city-medical/webpack/runtime/define property getters","webpack://great-city-medical/webpack/runtime/hasOwnProperty shorthand","webpack://great-city-medical/webpack/runtime/make namespace object","webpack://great-city-medical/./assets/js-src/blocks.js"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst fullscreen = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M4.2 9h1.5V5.8H9V4.2H4.2V9zm14 9.2H15v1.5h4.8V15h-1.5v3.2zM15 4.2v1.5h3.2V9h1.5V4.2H15zM5.8 15H4.2v4.8H9v-1.5H5.8V15z\"\n}));\nexport default fullscreen;\n//# sourceMappingURL=fullscreen.js.map","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"richText\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// General\nimport domReady from '@wordpress/dom-ready';\nimport { createElement } from '@wordpress/element';\nimport { registerBlockStyle } from '@wordpress/blocks';\nimport { unregisterBlockStyle } from '@wordpress/blocks';\n\n// Used to create new blocks\nimport { getBlockType } from '@wordpress/blocks';\nimport { registerBlockType } from '@wordpress/blocks';\n\n// Formatting Toolbar API\nimport { registerFormatType } from '@wordpress/rich-text';\nimport { RichTextToolbarButton } from '@wordpress/block-editor';\nimport { toggleFormat } from '@wordpress/rich-text';\n\n// For adding custom fields to blocks\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { Fragment } from '@wordpress/element';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, ButtonGroup, Button } from '@wordpress/components';\n\n// To add blocks inside a new block\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n// Icons\nimport { Icon } from '@wordpress/icons';\nimport { SVG, Path } from '@wordpress/components';\n\n// Specific icon elements that can be used as parameters for registerBlockType etc\nimport { fullscreen } from '@wordpress/icons';\n\n// For using toggle fields within custom fields of blocks\nimport { ToggleControl } from '@wordpress/components';\n\n// For max width slider field\nimport { addFilter } from '@wordpress/hooks';\nimport { TextControl } from '@wordpress/components';\nimport { RangeControl } from '@wordpress/components';\n\n// Add help text to positioned area field\nimport { BaseControl } from '@wordpress/components';\n\n// import { BlockControls } from '@wordpress/block-editor';\n// import { ToolbarGroup, ToolbarButton } from '@wordpress/components';\n// import { edit } from '@wordpress/icons';\n\n// Once WordPress has loaded\ndomReady(function () {\n\n\t// Load the GCM icon for use in the block editor\n\t// /assets/logo/block-editor-icon-medium.svg\n\n\tconst gcm_icon =\n\t\t<SVG xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 11.582 11.515\">\n\t\t\t<Path d=\"M5.791 0C2.596 0 0 2.582 0 5.758c0 3.177 2.597 5.758 5.793 5.758 3.194 0 5.789-2.581 5.789-5.758S8.985 0 5.791 0Zm0 .5c2.926 0 5.291 2.353 5.291 5.258s-2.363 5.258-5.289 5.258C2.865 11.016.5 8.663.5 5.758.5 2.854 2.864.5 5.791.5Z\" />\n\t\t\t<Path d=\"M4.39 3.076c-.495 0-.952.278-1.273.672-.32.394-.515.923-.437 1.467.037.262.18.525.373.832.193.306.443.644.717.988A38.5 38.5 0 0 0 5.404 8.92l.176.191.584-.58-.351-.355-.211.209A34.44 34.44 0 0 1 4.16 6.723a11.036 11.036 0 0 1-.685-.944c-.178-.28-.284-.526-.3-.634v-.002c-.054-.382.085-.778.329-1.079.244-.3.584-.488.887-.488.26 0 .478.091.648.207.17.116.292.264.336.336l.26.43.185-.467a.812.812 0 0 1 .266-.303c.155-.11.377-.203.701-.203.359 0 .835.256 1.088.647.253.39.32.883-.096 1.474l.409.287c.515-.731.453-1.495.107-2.03-.346-.536-.936-.878-1.508-.878a1.7 1.7 0 0 0-.99.295c-.117.082-.147.17-.219.26-.083-.09-.132-.176-.258-.262a1.653 1.653 0 0 0-.93-.293Z\" />\n\t\t\t<Path d=\"M5.54 6.797v.5h2.608v-.5z\" />\n\t\t\t<Path d=\"M6.594 5.742v2.61h.5v-2.61z\" />\n\t\t</SVG>;\n\n\t// -------------\n\t// Utilities\n\t// -------------\n\n\t// Check if a block name supports child blocks / nested blocks\n\tconst block_supports_child_blocks = ( name ) => {\n\t\tif ( getBlockType( name ).supports.hasOwnProperty( 'innerBlocks' ) ) {\n\t\t\treturn true;\n\t\t}else if ( name === 'core/group' || name === 'core/columns' ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// -------------\n\t// Custom Styles\n\t// -------------\n\n\t// Add custom button styles\n\t// Also see classic editor versions in editor.php -> gcm_insert_editor_formats()\n\tlet setup_button_styles = function() {\n\n\t\t// Temporarily remove built-in button styles\n\t\tunregisterBlockStyle( 'core/button', 'outline' );\n\n\t\t// button styles were moved to separate button color / button style fields\n\t\t// @see register_button_theme_select()\n\t\treturn;\n\n\t}\n\n\t// Groups have some advanced formatting options for positioning and overlays (and rounding, that's separate)\n\tlet setup_group_styles = function() {\n\n\t\t/*\n\t\tlet settings = {\n\t\t\t'blocks': [ 'core/group' ],\n\t\t\t'styles': [\n\t\t\t\t{\n\t\t\t\t\tname: 'relative',\n\t\t\t\t\tlabel: 'Relative'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'overlay',\n\t\t\t\t\tlabel: 'Overlay'\n\t\t\t\t},\n\t\t\t]\n\t\t};\n\n\t\tsettings.blocks.forEach( block_name => {\n\t\t\tsettings.styles.forEach( style => {\n\t\t\t\tregisterBlockStyle( block_name, style );\n\t\t\t});\n\t\t});\n\t\t*/\n\t};\n\n\t// Rounded corners can be applied to groups or images\n\tlet setup_rounded_styles = function() {\n\n\t\t// Temporarily remove built-in button styles\n\t\tunregisterBlockStyle('core/group', 'rounded');\n\t\tunregisterBlockStyle('core/image', 'rounded');\n\n\t\t// Add new styles\n\t\tlet settings = {\n\t\t\t'blocks': [ 'core/group', 'core/image' ],\n\t\t\t'styles': [\n\t\t\t\t{\n\t\t\t\t\tname: 'rounded',\n\t\t\t\t\tlabel: 'Rounded (Circle)'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'rounded-hero',\n\t\t\t\t\tlabel: 'Rounded (Hero)'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'rounded-8px',\n\t\t\t\t\tlabel: 'Rounded (8px)'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'rounded-32px',\n\t\t\t\t\tlabel: 'Rounded (32px)'\n\t\t\t\t},\n\t\t\t]\n\t\t};\n\n\t\tsettings.blocks.forEach( block_name => {\n\t\t\tsettings.styles.forEach( style => {\n\t\t\t\tregisterBlockStyle( block_name, style );\n\t\t\t});\n\t\t});\n\n\t};\n\n\t// ------------\n\t// Text Formats (using text format toolbar)\n\t// ------------\n\n\tlet register_text_formats = function() {\n\n\t\tlet custom_formats = [\n\t\t\t{\n\t\t\t\tformatName: 'gcm/h1',\n\t\t\t\ttitle: 'H1 (80px)',\n\t\t\t\tclassName: 'heading-h1',\n\t\t\t},\n\t\t\t{\n\t\t\t\tformatName: 'gcm/h2',\n\t\t\t\ttitle: 'H2 (60px)',\n\t\t\t\tclassName: 'heading-h2',\n\t\t\t},\n\t\t\t{\n\t\t\t\tformatName: 'gcm/h3',\n\t\t\t\ttitle: 'H3 (32px)',\n\t\t\t\tclassName: 'heading-h3',\n\t\t\t},\n\t\t\t{\n\t\t\t\tformatName: 'gcm/h4',\n\t\t\t\ttitle: 'H4 (28px)',\n\t\t\t\tclassName: 'heading-h4',\n\t\t\t},\n\t\t\t{\n\t\t\t\tformatName: 'gcm/h5',\n\t\t\t\ttitle: 'H5 (18px)',\n\t\t\t\tclassName: 'heading-h5',\n\t\t\t},\n\t\t\t{\n\t\t\t\tformatName: 'gcm/h6',\n\t\t\t\ttitle: 'H6 (14px)',\n\t\t\t\tclassName: 'heading-h6',\n\t\t\t},\n\t\t\t{\n\t\t\t\tformatName: 'gcm/sans-serif',\n\t\t\t\ttitle: 'Sans-Serif',\n\t\t\t\tclassName: 'text-sans-serif',\n\t\t\t},\n\t\t\t{\n\t\t\t\tformatName: 'gcm/serif',\n\t\t\t\ttitle: 'Serif',\n\t\t\t\tclassName: 'text-serif',\n\t\t\t},\n\t\t\t// {\n\t\t\t// \tformatName: 'gcm/eyebrow',\n\t\t\t// \ttitle: 'Eyebrow Text',\n\t\t\t// \tclassName: 'heading-eyebrow-text',\n\t\t\t// },\n\t\t\t{\n\t\t\t\tformatName: 'gcm/lowercase',\n\t\t\t\ttitle: 'Lower Case (abc)',\n\t\t\t\tclassName: 'text-lowercase',\n\t\t\t},\n\t\t\t{\n\t\t\t\tformatName: 'gcm/uppercase',\n\t\t\t\ttitle: 'Upper Case (ABC)',\n\t\t\t\tclassName: 'text-uppercase',\n\t\t\t},\n\t\t];\n\n\t\tlet edit_callback = function( format, props ) {\n\t\t\treturn createElement( RichTextToolbarButton, {\n\t\t\t\ttitle: format.title,\n\t\t\t\ticon: format.icon || 'editor-gcm-icon',\n\t\t\t\tisActive: props.isActive,\n\t\t\t\tonClick: function () {\n\t\t\t\t\tprops.onChange( toggleFormat(props.value, { type: format.formatName }) );\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\n\t\tcustom_formats.forEach(format => {\n\t\t\tregisterFormatType( format.formatName, {\n\t\t\t\ttitle: format.title,\n\t\t\t\tclassName: format.className,\n\t\t\t\ttagName: 'span',\n\t\t\t\tedit: props => {\n\t\t\t\t\treturn edit_callback( format, props );\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\n\t}\n\n\t// -------------\n\t// Custom blocks\n\t// -------------\n\n\t// Custom formats for headings\n\tlet register_heading_blocks = function() {\n\t\t// Heading (Eyebrow)\n\t\tregisterBlockType('gcm/heading-eyebrow', {\n\t\t\ttitle: 'Heading (Eyebrow)',\n\t\t\ticon: 'gcm',\n\t\t\tcategory: 'great-city-medical',\n\t\t\tattributes: {\n\t\t\t\tcontent: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tsource: 'html',\n\t\t\t\t\tselector: 'div',\n\t\t\t\t},\n\t\t\t},\n\t\t\tedit: function (props) {\n\t\t\t\treturn createElement(wp.blockEditor.RichText, {\n\t\t\t\t\tclassName: 'heading-eyebrow-title',\n\t\t\t\t\ttagName: 'div',\n\t\t\t\t\tonChange: (c) => { props.setAttributes({ content: c }) },\n\t\t\t\t\tvalue: props.attributes.content,\n\t\t\t\t\tplaceholder: 'Enter text...'\n\t\t\t\t});\n\t\t\t},\n\t\t\tsave: function (props) {\n\t\t\t\treturn createElement(wp.blockEditor.RichText.Content, {\n\t\t\t\t\tclassName: 'heading-eyebrow-title',\n\t\t\t\t\ttagName: 'div',\n\t\t\t\t\tvalue: props.attributes.content\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n\n\t// -------------\n\t// Custom fields (for use within custom blocks)\n\t// -------------\n\n\tlet register_button_theme_select = function() {\n\n\t\t// Add a custom field for button block to choose the button color\n\t\tconst buttonColorSelect = createHigherOrderComponent( ( BlockEdit ) => {\n\t\t\tconst styles = [\n\t\t\t\t{\n\t\t\t\t\tname: 'purple',\n\t\t\t\t\tclassName: 'button-color-purple',\n\t\t\t\t\tlabel: 'Purple'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'blue',\n\t\t\t\t\tclassName: 'button-color-blue',\n\t\t\t\t\tlabel: 'Blue'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'black',\n\t\t\t\t\tclassName: 'button-color-black',\n\t\t\t\t\tlabel: 'Black'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'white',\n\t\t\t\t\tclassName: 'button-color-white',\n\t\t\t\t\tlabel: 'White'\n\t\t\t\t}\n\t\t\t];\n\n\t\t\t// Get all classes so that we can easily remove them all when the selection changes\n\t\t\tlet all_classes = styles.map( style => style.className ).filter(val => val !== '');\n\n\t\t\treturn (props) => {\n\t\t\t\tconst { name, attributes, setAttributes, isSelected } = props;\n\t\t\t\tconst { myAttribute } = attributes;\n\n\t\t\t\t// Only enable for button elements\n\t\t\t\tif (name !== 'core/button') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t\t{isSelected && (\n\t\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t\t<PanelBody title=\"Button Colors\" initialOpen={true}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor-button-colors gcm-editor--button-group\">\n\t\t\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor--button-group--grid\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{styles.map((style) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPrimary={props.attributes.className && props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSecondary={!props.attributes.className || !props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Add the selected class if it exists\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = `${className} ${style.className}`.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"color-\" + style.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{style.label}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t};\n\t\t}, 'buttonColorSelect' );\n\n\t\taddFilter( 'editor.BlockEdit', 'gcm/register_button_color_select', buttonColorSelect );\n\n\t\t\n\t\t// Add a custom field for button block to choose the button style\n\t\tconst buttonStyleSelect = createHigherOrderComponent( ( BlockEdit ) => {\n\t\t\tconst styles = [\n\t\t\t\t{\n\t\t\t\t\tname: 'primary',\n\t\t\t\t\tclassName: 'button-style-primary',\n\t\t\t\t\taltTitle: 'Solid background',\n\t\t\t\t\tlabel: 'Primary'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'secondary',\n\t\t\t\t\tclassName: 'button-style-secondary',\n\t\t\t\t\taltTitle: 'Transparent background',\n\t\t\t\t\tlabel: 'Secondary'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'outline',\n\t\t\t\t\tclassName: 'button-style-outline',\n\t\t\t\t\taltTitle: 'No background',\n\t\t\t\t\tlabel: 'Outline'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'text',\n\t\t\t\t\tclassName: 'button-style-text',\n\t\t\t\t\taltTitle: 'No border or background',\n\t\t\t\t\tlabel: 'Text'\n\t\t\t\t}\n\t\t\t];\n\n\t\t\t// Get all classes so that we can easily remove them all when the selection changes\n\t\t\tlet all_classes = styles.map( style => style.className ).filter(val => val !== '');\n\n\t\t\treturn (props) => {\n\t\t\t\tconst { name, attributes, setAttributes, isSelected } = props;\n\t\t\t\tconst { myAttribute } = attributes;\n\n\t\t\t\t// Only enable for button elements\n\t\t\t\tif (name !== 'core/button') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t\t{isSelected && (\n\t\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t\t<PanelBody title=\"Button Styles\" initialOpen={true}>\n\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor-button-styles gcm-editor--button-group\">\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor--button-group--grid\">\n\t\t\t\t\t\t\t\t\t\t\t\t{styles.map((style) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={style.altTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPrimary={props.attributes.className && props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSecondary={!props.attributes.className || !props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Add the selected class if it exists\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = `${className} ${style.className}`.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"style-\" + style.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{style.label}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t};\n\t\t}, 'buttonStyleSelect' );\n\n\t\taddFilter( 'editor.BlockEdit', 'gcm/register_button_style_select', buttonStyleSelect );\n\n\t};\n\n\t// -------------\n\t// Custom fields for groups to choose display type\n\t// -------------\n\n\t/*\n\tlet register_group_display_field = function() {\n\n\t\t// Add a custom field for button block to choose the button style\n\t\tconst groupDisplaySelect = createHigherOrderComponent( ( BlockEdit ) => {\n\t\t\tconst styles = [\n\t\t\t\t{\n\t\t\t\t\tname: 'relative',\n\t\t\t\t\tclassName: 'group-display-relative',\n\t\t\t\t\tlabel: 'Relative'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'absolute',\n\t\t\t\t\tclassName: 'group-display-absolute',\n\t\t\t\t\tlabel: 'Absolute'\n\t\t\t\t},\n\t\t\t];\n\n\t\t\t// Get all classes so that we can easily remove them all when the selection changes\n\t\t\tlet all_classes = styles.map( style => style.className ).filter(val => val !== '');\n\n\t\t\treturn (props) => {\n\t\t\t\tconst { name, attributes, setAttributes, isSelected } = props;\n\t\t\t\tconst { myAttribute, showButtonGroup } = attributes;\n\n\t\t\t\t// Only enable for button elements\n\t\t\t\tif (name !== 'core/group') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t\t{isSelected && (\n\t\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t\t<PanelBody title=\"Position\" initialOpen={true}>\n\t\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\t\tlabel=\"Enable positioning\"\n\t\t\t\t\t\t\t\t\t\tchecked={showButtonGroup}\n\t\t\t\t\t\t\t\t\t\tonChange={(value) => setAttributes({ showButtonGroup: value })}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{showButtonGroup && (\n\t\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor-group-styles gcm-editor--button-group\">\n\t\t\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor--button-group--grid\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{styles.map((style) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisRelative={props.attributes.className && props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPositioned={!props.attributes.className || !props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Add the selected class if it exists\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = `${className} ${style.className}`.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"display-\" + style.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{style.label}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t};\n\t\t}, 'groupDisplaySelect' );\n\n\t\taddFilter( 'editor.BlockEdit', 'gcm/register_group_display_select', groupDisplaySelect );\n\n\t};\n\t */\n\n\t// -------------\n\t// Positioning blocks\n\t// -------------\n\n\n\tlet register_positioned_blocks = function() {\n\t\t// Positioned Container Block\n\t\tregisterBlockType('gcm/positioned-container', {\n\t\t\ttitle: 'Positioned Container',\n\t\t\tdescription: '\"Positioned Element\" blocks are attached relative to this container, overlapping any other blocks within the container.',\n\t\t\ticon: fullscreen, //'grid-view',\n\t\t\tcategory: 'layout',\n\t\t\tattributes: {\n\t\t\t\tclassName: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t},\n\t\t\tsupports: {\n\t\t\t\tinnerBlocks: true,\n\t\t\t},\n\t\t\tedit: (props) => {\n\t\t\t\tconst { className } = props.attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className={`positioned-container ${className}`}>\n\t\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\t\ttemplate={[['gcm/positioned-element']]}\n\t\t\t\t\t\t\ttemplateLock={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t\tsave: (props) => {\n\t\t\t\tconst { className } = props.attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className={`positioned-container ${className}`}>\n\t\t\t\t\t\t<InnerBlocks.Content />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t});\n\n\t\t// Positioned Element Block\n\t\tregisterBlockType('gcm/positioned-element', {\n\t\t\ttitle: 'Positioned Element',\n\t\t\tdescription: 'This element MUST be contained in a \"Positioned Container\". It will appear on top of other blocks in the container.',\n\t\t\ticon: 'editor-contract',\n\t\t\tcategory: 'layout',\n\t\t\tattributes: {\n\t\t\t\tclassName: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tdefault: '',\n\t\t\t\t},\n\t\t\t},\n\t\t\tsupports: {\n\t\t\t\tinnerBlocks: true,\n\t\t\t},\n\t\t\tedit: (props) => {\n\t\t\t\tconst { className } = props.attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className={`positioned-element ${className}`}>\n\t\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\t\ttemplate={[['core/paragraph', { placeholder: 'Add content here...' }]]}\n\t\t\t\t\t\t\ttemplateLock={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t\tsave: (props) => {\n\t\t\t\tconst { className } = props.attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className={`positioned-element ${className}`}>\n\t\t\t\t\t\t<InnerBlocks.Content />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t});\n\n\t};\n\n\n\n\n\tlet register_positioned_block_styles = function() {\n\n\t\t// Add a custom field for button block to choose the button style\n\t\tconst positionAreaSelect = createHigherOrderComponent( ( BlockEdit ) => {\n\t\t\tconst styles = [\n\t\t\t\t{\n\t\t\t\t\tname: 'inside-top',\n\t\t\t\t\tclassName: 'position-area-inside-top',\n\t\t\t\t\tlabel: 'Inside Top'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'inside-top-small',\n\t\t\t\t\tclassName: 'position-area-inside-top-small',\n\t\t\t\t\tlabel: 'Inside Top Small'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'inside-bottom-right',\n\t\t\t\t\tclassName: 'position-area-inside-bottom-right',\n\t\t\t\t\tlabel: 'Inside Bottom Right'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'outside-top-left',\n\t\t\t\t\tclassName: 'position-area-outside-top-left',\n\t\t\t\t\tlabel: 'Outside Top Left'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'outside-bottom-left',\n\t\t\t\t\tclassName: 'position-area-outside-bottom-left',\n\t\t\t\t\tlabel: 'Outside Bottom Left'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'outside-right',\n\t\t\t\t\tclassName: 'position-area-outside-right',\n\t\t\t\t\tlabel: 'Outside Right'\n\t\t\t\t}\n\t\t\t];\n\n\t\t\t// Get all classes so that we can easily remove them all when the selection changes\n\t\t\tlet all_classes = styles.map( style => style.className ).filter(val => val !== '');\n\n\t\t\treturn (props) => {\n\t\t\t\tconst { name, attributes, setAttributes, isSelected } = props;\n\t\t\t\tconst { myAttribute } = attributes;\n\n\t\t\t\t// Only enable for positioned element\n\t\t\t\tif (name !== 'gcm/positioned-element') {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t\t{isSelected && (\n\t\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t\t<PanelBody title=\"Position Area\" initialOpen={true}>\n\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor-position-areas gcm-editor--button-group\">\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor--button-group--grid\">\n\t\t\t\t\t\t\t\t\t\t\t\t{styles.map((style) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={style.altTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPrimary={props.attributes.className && props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSecondary={!props.attributes.className || !props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Add the selected class if it exists\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = `${className} ${style.className}`.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"style-\" + style.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{style.label}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<BaseControl help=\"The positioning is only applied on the front-end.\">\n\t\t\t\t\t\t\t\t\t\t{/* We leave this part empty because we only want the help text */}\n\t\t\t\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t};\n\t\t}, 'positionAreaSelect' );\n\n\t\taddFilter( 'editor.BlockEdit', 'gcm/register_position_area_select', positionAreaSelect );\n\t};\n\n\n\n\n\tlet register_vertical_margin_select = function() {\n\n\t\t// Add a custom field for verticals to choose a style\n\t\tconst verticalMarginSelect = createHigherOrderComponent( ( BlockEdit ) => {\n\t\t\tconst classPrefix = 'vertical-margin-';\n\n\t\t\tconst styles = [\n\t\t\t\t{\n\t\t\t\t\tname: 'none',\n\t\t\t\t\tlabel: 'None (0px)',\n\t\t\t\t\tclassName: 'vertical-margin-none',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'tiny',\n\t\t\t\t\tlabel: 'Tiny (16px)',\n\t\t\t\t\tclassName: 'vertical-margin-tiny',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'small',\n\t\t\t\t\tlabel: 'Small (24px)',\n\t\t\t\t\tclassName: 'vertical-margin-small',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'medium',\n\t\t\t\t\tlabel: 'Medium (40px)',\n\t\t\t\t\tclassName: 'vertical-margin-medium',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'large',\n\t\t\t\t\tlabel: 'Large (80px)',\n\t\t\t\t\tclassName: 'vertical-margin-large',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'huge',\n\t\t\t\t\tlabel: 'Huge (150px)',\n\t\t\t\t\tclassName: 'vertical-margin-huge',\n\t\t\t\t},\n\t\t\t];\n\n\t\t\t// Get all classes so that we can easily remove them all when the selection changes\n\t\t\tlet all_classes = styles.map( style => style.className ).filter(val => val !== '');\n\n\t\t\treturn (props) => {\n\t\t\t\tconst { name, attributes, setAttributes, isSelected } = props;\n\t\t\t\tconst { myAttribute } = attributes;\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t\t{isSelected && (\n\t\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t\t<PanelBody title=\"Vertical Margin\" initialOpen={true}>\n\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor-vertical-margins gcm-editor--button-group\">\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor--button-group--grid\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"None\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPrimary={!props.attributes.className || !props.attributes.className.includes(\"vertical-margin-\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisSecondary={props.attributes.className && props.attributes.className.includes(\"vertical-margin-\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"style-default\"}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tDefault\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t{styles.map((style) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={style.altTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPrimary={props.attributes.className && props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSecondary={!props.attributes.className || !props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Add the selected class if it exists\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = `${className} ${style.className}`.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"style-\" + style.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{style.label}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t};\n\t\t}, 'verticalMarginSelect' );\n\n\t\taddFilter( 'editor.BlockEdit', 'gcm/register_vertical_margin_select', verticalMarginSelect );\n\t};\n\n\n\tlet register_container_styles = function() {\n\n\t\t/*\n\t\t// Add a custom field for top level container to choose a width. Uses align classes from default blocke ditor\n\t\tconst containerWidthSelect = createHigherOrderComponent( ( BlockEdit ) => {\n\t\t\tconst widths = [\n\t\t\t\t{\n\t\t\t\t\tname: 'wide',\n\t\t\t\t\tclassName: 'alignwide',\n\t\t\t\t\tlabel: 'Normal (1560px)'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'full',\n\t\t\t\t\tclassName: 'alignfull',\n\t\t\t\t\tlabel: 'Full (100%)'\n\t\t\t\t},\n\t\t\t];\n\n\t\t\t// Get all classes so that we can easily remove them all when the selection changes\n\t\t\tlet all_classes = widths.map( width => width.className ).filter(val => val !== '');\n\n\t\t\treturn (props) => {\n\t\t\t\tconst { name, attributes, setAttributes, isSelected } = props;\n\t\t\t\tconst { myAttribute } = attributes;\n\n\t\t\t\t// Only applies to group elements\n\t\t\t\tlet is_top_level_group = true;\n\n\t\t\t\tif ( name !== 'core/group' ) {\n\t\t\t\t\tis_top_level_group = false;\n\t\t\t\t}\n\n\t\t\t\t// Check if the block has any parent blocks\n\t\t\t\tconsole.log( 'child blocks: ', wp.data.select( 'core/block-editor' ).getBlockParents( props.clientId ) );\n\t\t\t\tif ( wp.data.select( 'core/block-editor' ).getBlockParents( props.clientId ).length > 0 ) {\n\t\t\t\t\tis_top_level_group = false;\n\t\t\t\t}\n\n\t\t\t\tif ( ! is_top_level_group ) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t\t{isSelected && (\n\t\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t\t<PanelBody title=\"Container Width\" initialOpen={true}>\n\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor-container-widths gcm-editor--button-group\">\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor--button-group--grid\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"None\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPrimary={!props.attributes.className || !props.attributes.className.includes(\"align\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisSecondary={props.attributes.className && props.attributes.className.includes(\"align\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"width-none\"}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tNone\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t{widths.map((width) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={width.altTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPrimary={props.attributes.className && props.attributes.className.split(' ').includes(width.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSecondary={!props.attributes.className || !props.attributes.className.split(' ').includes(width.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Add the selected class if it exists\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = `${className} ${width.className}`.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"width-\" + width.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{width.label}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t};\n\t\t}, 'containerWidthSelect' );\n\n\t\taddFilter( 'editor.BlockEdit', 'gcm/register_container_width_select', containerWidthSelect );\n\t\t*/\n\n\t\t// Add a custom field for containers to choose a style\n\t\tconst containerStyleSelect = createHigherOrderComponent( ( BlockEdit ) => {\n\t\t\tconst styles = [\n\t\t\t\t{\n\t\t\t\t\tname: 'section',\n\t\t\t\t\tclassName: 'container-style-section',\n\t\t\t\t\tlabel: 'Section'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'card',\n\t\t\t\t\tclassName: 'container-style-card',\n\t\t\t\t\tlabel: 'Card'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'card-small',\n\t\t\t\t\tclassName: 'container-style-card-small',\n\t\t\t\t\tlabel: 'Card (Small)'\n\t\t\t\t},\n\t\t\t];\n\n\t\t\t// Get all classes so that we can easily remove them all when the selection changes\n\t\t\tlet all_classes = styles.map( style => style.className ).filter(val => val !== '');\n\n\t\t\treturn (props) => {\n\t\t\t\tconst { name, attributes, setAttributes, isSelected } = props;\n\t\t\t\tconst { myAttribute } = attributes;\n\n\t\t\t\t// Only enable for blocks which can contain other blocks\n\t\t\t\tif ( ! block_supports_child_blocks( name ) ) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t\t{isSelected && (\n\t\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t\t<PanelBody title=\"Container Style\" initialOpen={true}>\n\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor-container-styles gcm-editor--button-group\">\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"gcm-editor--button-group--grid\">\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"None\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tisPrimary={!props.attributes.className || !props.attributes.className.includes(\"container-style-\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisSecondary={props.attributes.className && props.attributes.className.includes(\"container-style-\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"style-none\"}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tNone\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t\t\t{styles.map((style) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={style.altTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisPrimary={props.attributes.className && props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSecondary={!props.attributes.className || !props.attributes.className.split(' ').includes(style.className)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Create a copy of the className\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet className = props.attributes.className ? props.attributes.className : '';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Remove all the existing classes\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tall_classes.forEach((cls) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.replace(cls, '');\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Trim whitespace\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = className.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Add the selected class if it exists\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName = `${className} ${style.className}`.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Update the block's className attribute\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.setAttributes({ className: className });\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"style-\" + style.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{style.label}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t};\n\t\t}, 'containerStyleSelect' );\n\n\t\taddFilter( 'editor.BlockEdit', 'gcm/register_container_style_select', containerStyleSelect );\n\t}\n\n\t// ----------------------------\n\t// Initialize styles and blocks\n\t// ----------------------------\n\n\t// Styles\n\tsetup_button_styles();\n\n\tsetup_group_styles();\n\n\tsetup_rounded_styles();\n\n\t// Text formats (used in paragraph dropdown, etc)\n\tregister_text_formats();\n\n\t// Custom blocks\n\tregister_heading_blocks();\n\n\t// Custom button theme fields\n\tregister_button_theme_select();\n\n\t// Custom group display fields\n\t// register_group_display_field();\n\n\t// Positioned blocks (position container + positioned element)\n\tregister_positioned_blocks();\n\t\n\tregister_positioned_block_styles();\n\n\t// Vertical margin, any block\n\tregister_vertical_margin_select();\n\n\t// Container styles (blocks etc)\n\tregister_container_styles();\n\n});"],"names":["domReady","createElement","registerBlockStyle","unregisterBlockStyle","getBlockType","registerBlockType","registerFormatType","RichTextToolbarButton","toggleFormat","createHigherOrderComponent","Fragment","InspectorControls","PanelBody","ButtonGroup","Button","InnerBlocks","Icon","SVG","Path","fullscreen","ToggleControl","addFilter","TextControl","RangeControl","BaseControl","gcm_icon","xmlns","viewBox","d","block_supports_child_blocks","name","supports","hasOwnProperty","setup_button_styles","setup_group_styles","setup_rounded_styles","settings","label","blocks","forEach","block_name","styles","style","register_text_formats","custom_formats","formatName","title","className","edit_callback","format","props","icon","isActive","onClick","onChange","value","type","tagName","edit","register_heading_blocks","category","attributes","content","source","selector","wp","blockEditor","RichText","c","setAttributes","placeholder","save","Content","register_button_theme_select","buttonColorSelect","BlockEdit","all_classes","map","filter","val","isSelected","myAttribute","initialOpen","isPrimary","split","includes","isSecondary","cls","replace","trim","buttonStyleSelect","altTitle","register_positioned_blocks","description","default","innerBlocks","template","templateLock","register_positioned_block_styles","positionAreaSelect","help","register_vertical_margin_select","verticalMarginSelect","classPrefix","register_container_styles","containerStyleSelect"],"sourceRoot":""}